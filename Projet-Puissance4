grille =[[0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0]]

vide = 0
Joueur1 = 1
Joueur2 = 2
Nb_lignes = 6
Nb_colonnes = 7
Nb_joueurs = 2
def afficher_grille(grille):
    '''Description : Fonction qui affiche la grille du jeu à l'envers.
    case vide = 0, pion rouge = 1, pion jaune=2.
    Les numéros de colonne de 1 à 7 doivent apparaître en dessous de la grille.
    grille (lst) = la liste des listes représentant la grille du jeu
    return (None)
    '''
    print(grille)
    j = int()
    print("_", end="_")
    for j in range(1, Nb_colonnes+1):
        print(j,end="_")
    print()



    
def jouer(grille, joueur):
    '''
    Description : Teste si la colonne n'est pas pleine et renvoie
    la ligne et la colonne du joueur.
    grille (lst) : liste de liste représentant la grille
        Effet de bord : la grille est modifiée dans cette fonction
    joueur (int) : 1 si le joueur est le numéro 1, 2 si le joueur 2
    return position(tuple): donne le numéro de ligne et le numéro de colonne. 
    '''

def vider_grille(Jeu):
    i = int()
    j = int()
    for i in range(Nb_lignes + 2):
        for j in range(Nb_colonnes + 2):
            Jeu.grille[i][j] = vide

def alignement_vertical(grille, position, joueur):
    '''Description : Fonction qui teste si 4 pions du joueur sont alignés verticalement;
    grille(lst) :   Liste de liste représentant la grille courante du jeu;
    position(tuple) : représente les coordonnées du pion qui vient d'être joué;
    joueur(int) : 1 si le joueur est le numéro 1, 2 si le joueur 2;
    return alignes(bool) : vrai si joueur gagne, Faux sinon.
